###List Comprehension###
#create a list from 0-9 where x modulo 2 returns 0 --if comes after for
[x for x in range(10) if x % 2 == 0]

#if-else comes before for
[x**2 if x % 2 == 0 else x**3 for x in range(10)]

#create multi-dimensional lists using list comprehension
pprint([[0 for x in range(10)] for y in range(10)]) #pprint for readability
#output
[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]


###Dictionary Comprehension###
#{key: value for (key, value) in zip(list1, list2)}
{k: v**3 for (k, v) in zip(string.ascii_lowercase, range(26))}

#if-else statements can be used as with list comprehension (see related file)


###Set Comprehension###
#collection of elements where each element can only appear once --same structure as list comprehension but with {}
{n**2 for n in range(10)}


###Resource###
#https://www.smallsurething.com/list-dict-and-set-comprehensions-by-example/
